// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebServerSideAPI.Models;

namespace WebServerSideAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220331171921_initSQLite")]
    partial class initSQLite
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("WebServerSideAPI.Models.Categories", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(10000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Picture")
                        .HasMaxLength(10000)
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Electronics",
                            Description = "The field of electronics is a branch of physics and electrical engineering that deals with the emission, behavior and effects of electrons using electronic devices",
                            Picture = "https://upload.wikimedia.org/wikipedia/commons/f/f5/Electronic_circuit.jpg"
                        });
                });

            modelBuilder.Entity("WebServerSideAPI.Models.Products", b =>
                {
                    b.Property<int>("productID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("discontinued")
                        .HasColumnType("INTEGER");

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<int>("quantityPerUnit")
                        .HasColumnType("INTEGER");

                    b.Property<int>("reorderLevel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("supplierId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("unitPrice")
                        .HasColumnType("numeric");

                    b.Property<int>("unitsInStock")
                        .HasColumnType("INTEGER");

                    b.Property<int>("unitsOnOrder")
                        .HasColumnType("INTEGER");

                    b.HasKey("productID");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            productID = 1,
                            CategoryId = 1,
                            discontinued = true,
                            productName = "Hard Derive",
                            quantityPerUnit = 43,
                            reorderLevel = 5,
                            supplierId = 235,
                            unitPrice = 43.6m,
                            unitsInStock = 7,
                            unitsOnOrder = 3
                        },
                        new
                        {
                            productID = 2,
                            CategoryId = 1,
                            discontinued = false,
                            productName = "Iphone",
                            quantityPerUnit = 45,
                            reorderLevel = 2,
                            supplierId = 532,
                            unitPrice = 53.6m,
                            unitsInStock = 2,
                            unitsOnOrder = 6
                        });
                });

            modelBuilder.Entity("WebServerSideAPI.Models.Products", b =>
                {
                    b.HasOne("WebServerSideAPI.Models.Categories", "Categories")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories");
                });

            modelBuilder.Entity("WebServerSideAPI.Models.Categories", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
